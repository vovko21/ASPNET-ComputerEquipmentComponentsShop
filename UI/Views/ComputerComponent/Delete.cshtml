@model UI.Models.ComponentViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Delete</title>
</head>
<body>
    <div class="dashboard-wrapper">
        <div class="container pt-4">
            <div class="row">
                <h2>Delete</h2>

                <div>
                    @using (Html.BeginForm("Delete", "ComputerComponent", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
                            <div class="ml-5 d-inline-block">
                                @Html.DropDownList("Type", new SelectList(ViewBag.TypesName), htmlAttributes: new { @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Producer, htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
                            <div class="ml-5 d-inline-block">
                                @Html.DropDownList("Producer", new SelectList(ViewBag.ProducersName), htmlAttributes: new { @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="d-flex">
                            <div class="form-group">
                                <div class="col-md-10">
                                    <div class="form-check form-check-inline d-flex align-items-center">
                                        <input class="form-check-input d-inlineblock" type="radio" name="inlineRadioOptions" id="inlineRadio1" value="option" onchange="DisplayImageText(this)">
                                        <label class="form-check-label" for="inlineRadio1">URL</label>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-10">
                                    <div class="form-check form-check-inline d-flex align-items-center">
                                        <input class="form-check-input d-inlineblock" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="option1" onchange="DisplayImageURL(this)">
                                        <label class="form-check-label" for="inlineRadio2">LocalPC</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-10 d-none" id="game-img-url">
                                <label for="uploadFile">Choose file to upload</label>
                                <input id="image_attach" type="file" name="uploadFile" readonly>
                            </div>
                        </div>
                        <div class="form-group d-none" id="game-img-text">
                            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger", @readonly = "readonly" })
                            </div>
                        </div>
                        <!-- Button trigger modal -->
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
                            Delete
                        </button>

                        <!-- Modal -->
                        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalLabel">Delete Confirmation</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        It will be permonently deleted!
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-light" data-bs-dismiss="modal">Close</button>
                                        <button type="submit" class="btn btn-danger" value="Delete">Delete</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    <hr />
                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
